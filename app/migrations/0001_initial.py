# Generated by Django 4.0.4 on 2022-11-25 10:05

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='job_post',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('c393f86f-bca0-4ea2-8216-447d78a67951'), editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('job_profile', models.CharField(max_length=100, null=True)),
                ('company_name', models.CharField(max_length=100, null=True)),
                ('job_location', models.CharField(max_length=100, null=True)),
                ('min_salary', models.IntegerField(blank=True)),
                ('max_salary', models.IntegerField(blank=True)),
                ('Vacancy', models.IntegerField(null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('package', models.CharField(blank=True, max_length=10)),
                ('job_description', ckeditor.fields.RichTextField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('c393f86f-bca0-4ea2-8216-447d78a67951'), editable=False, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(blank=True, max_length=20)),
                ('remote_type', models.CharField(blank=True, choices=[('REMOTE', 'REMOTE'), ('ONSITE', 'ONSITE'), ('HYBRID', 'HYBRID')], max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('job_profile', models.CharField(blank=True, choices=[('Desinger', 'Desinger'), ('software engineer', 'software engineer'), ('Backend Developer', 'Backend Developer'), ('Forentend Developer', 'Forentend Developer'), ('UI/UX Desinger', 'UI/UX Desinger')], max_length=250)),
                ('phone_number', models.CharField(blank=True, max_length=12)),
                ('work_expriance', models.CharField(blank=True, max_length=5)),
                ('job_type', models.CharField(blank=True, choices=[('permanent', 'permanent'), ('Temporary', 'Temporary'), ('Contract', 'Contract')], max_length=20)),
                ('doc', models.FileField(null=True, upload_to='')),
                ('zipcode', models.CharField(blank=True, max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('1', 'Super-Admin'), ('2', 'Company')], default=1, max_length=15)),
                ('profile_pic', models.ImageField(upload_to='User/Upload')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
